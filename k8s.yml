# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: 0303-maksimov-evgenii
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: hw-configmap
  namespace: 0303-maksimov-evgenii
data:
  REACT_APP_SERVER_API_URL: http://hw-server-service
  REACT_APP_SERVER_API_PORT: "5000"
  POSTGRES_USER: user
  POSTGRES_HOST: hw-postgres-service
  POSTGRES_DB: db
  POSTGRES_PORT: "5432"
  POSTGRES_PORT_EXTERNAL: "5432"
  SERVER_PORT: "5000"
---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: hw-secret
  namespace: 0303-maksimov-evgenii
type: Opaque
data:
  POSTGRES_PASSWORD: MTIzNDU2 # 123456 (Base64)
---
# Client Service
apiVersion: v1
kind: Service
metadata:
  name: hw-client-service
  namespace: 0303-maksimov-evgenii
spec:
  selector:
    app: hw-client  # ClientDeployment.spec.selector.matchLabels.app, 
                    # ClientDeployment.spec.template.metadata.labels.app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 80
  type: LoadBalancer  # LOAD BALANCER
---
# Client Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw-client-deployment
  namespace: 0303-maksimov-evgenii
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hw-client  # ClientService.spec.selector.app
  template:
    metadata:
      labels:
        app: hw-client  # ClientService.spec.selector.app
    spec:
      containers:
        - name: hw-client-container
          image: 2513009079942350/helloworld-docker-nodejs-client:latest
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "200Mi"
            limits:
              memory: "400Mi"
          env:
            - name: REACT_APP_SERVER_API_URL
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: REACT_APP_SERVER_API_URL
            - name: REACT_APP_SERVER_API_PORT
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: REACT_APP_SERVER_API_PORT
---
# Server Service
apiVersion: v1
kind: Service
metadata:
  name: hw-server-service
  namespace: 0303-maksimov-evgenii
spec:
  selector:
    app: hw-server  # ServerDeployment.spec.selector.matchLabels.app, 
                    # ServerDeployment.spec.template.metadata.labels.app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
# Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw-server-deployment
  namespace: 0303-maksimov-evgenii
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hw-server  # ClientService.spec.selector.app
  template:
    metadata:
      labels:
        app: hw-server  #  ClientService.spec.selector.app
    spec:
      containers:
        - name: hw-server-container
          image: 2513009079942350/helloworld-docker-nodejs-server:latest
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: "200Mi"
            limits:
              memory: "400Mi"
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hw-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_PORT
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: SERVER_PORT
---
# DB Service
apiVersion: v1
kind: Service
metadata:
  name: hw-postgres-service
  namespace: 0303-maksimov-evgenii
spec:
  clusterIP: None     # Headless service for StatefulSet
  selector:
    app: hw-postgres  # DBStatefulSet.spec.template.metadata.labels.app
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# DB Persistent volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: 0303-maksimov-evgenii
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# DB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hw-postgres-statefulset
  namespace: 0303-maksimov-evgenii
spec:
  serviceName: hw-postgres-service # DBService.metadata.name
  replicas: 1
  selector:
    matchLabels:
      app: hw-postgres
  template:
    metadata:
      labels:
        app: hw-postgres
    spec:
      containers:
        - name: hw-postgres-container
          image: postgres:alpine
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "250Mi"
            limits:
              memory: "500Mi"
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hw-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: hw-configmap
                  key: POSTGRES_DB
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
